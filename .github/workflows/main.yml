name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y whiptail setools lzip wine winetricks patchelf e2fsprogs python3-pip aria2 p7zip-full attr
          pip list --disable-pip-version-check | grep -E "^requests " >/dev/null 2>&1 || python3 -m pip install requests

          winetricks list-installed | grep -E "^msxml6" >/dev/null 2>&1 || {
              cp -r ../wine/.cache/* ~/.cache
              winetricks msxml6 || abort
          }
      
      - name: Update submodules
        run: |
          git submodule update --init --recursive
          git submodule update --remote
      
      - name: Build Magisk On WSA
        run: |
          cd ./MagiskOnWSALocal
          cd scripts
          ./build.sh \
              --arch x64 \
              --release-type WIF \
              --magisk-ver beta \
              --gapps-brand MindTheGapps \
              --gapps-variant pico \
              --remove-amazon \
              --root-sol magisk \
              --compress
          ls -l
      
      - name: Generate timestamp
        id: timestamp # output: value
        run: |
          TIMESTAMP="$(date +"%Y%m%d")"
          echo "Timestamp: ${TIMESTAMP}"
          echo "::set-output name=value::${TIMESTAMP}"
      - name: Create New Release and Upload
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "output/*"
          name: "${{ format('WSA: {0}', steps.timestamp.outputs.value) }}"
          tag: $${{ steps.timestamp.outputs.value }}
          commit: ${{ github.sha }}
          #prerelease: true
          allowUpdates: true

          # XXX: edit this to false & true if you want to preserve original artifact
          removeArtifacts: true
          replacesArtifacts: false
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
